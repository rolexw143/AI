import random

# Define the suits and ranks of the deck
suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades']
ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']

# Create a deck of cards (combining suits and ranks)
deck = [f'{rank} of {suit}' for suit in suits for rank in ranks]

# Function to shuffle the deck
def shuffle_deck(deck):
    random.shuffle(deck)
    return deck

# Function to deal cards from the deck
def deal_cards(deck, num_cards):
    if num_cards <= len(deck):
        dealt_cards = deck[:num_cards]
        deck = deck[num_cards:]
        return dealt_cards, deck
    else:
        print("Not enough cards left in the deck!")
        return [], deck

# Main function to simulate card shuffling and dealing
def main():
    print("Original deck:")
    print(deck)
    print("\nShuffling deck...\n")
    
    shuffled_deck = shuffle_deck(deck[:])  # Shuffle a copy of the deck
    
    print("Shuffled deck:")
    print(shuffled_deck)
    
    # Example of dealing 5 cards from the shuffled deck
    num_cards_to_deal = 5
    dealt_cards, remaining_deck = deal_cards(shuffled_deck, num_cards_to_deal)
    
    print(f"\nDealt {num_cards_to_deal} cards:")
    print(dealt_cards)
    
    print(f"\nRemaining cards in the deck ({len(remaining_deck)} cards left):")
    print(remaining_deck)

if __name__ == "__main__":
    main()
